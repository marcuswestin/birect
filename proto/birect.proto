syntax = "proto3";

package wire;

enum DataType {
	_ = 0;
	JSON = 1;
	Proto = 2;
}

message Wrapper {
	oneof content {
		Message  message  = 1;
		Request  request  = 2;
		Response response = 3;
	}
}

message Message {
	DataType type = 1;
	string   name = 2;
	bytes    data = 3;
}

message Request {
	DataType type   = 1;
	uint32   req_id = 2;
	string   name   = 3;
	bytes    data   = 4;
}

message Response {
	DataType type   = 1;
	uint32   req_id = 2;
	bool     isError = 3;
	// 3 left out
	bytes    data   = 4;
}



// type RequestName string
// type RequestId uint16
// type MessageName string

// type ResponseHandler func([]byte)
// type ResponseFn func([]byte)

// type Message struct {
// 	Name MessageName
// 	Data []byte
// }

// type Request struct {
// 	Name RequestName
// 	Data []byte
// }

// type Response struct {
// 	Name  RequestName
// 	Error []byte
// 	Data  []byte
// }

// var lastReqId = uint32(0)

// type frameTypeByte byte

// const (
// 	frameTypeMsg = frameTypeByte(1)
// 	frameTypeReq = frameTypeByte(2)
// 	frameTypeRes = frameTypeByte(3)
// )

// var responseFns = map[RequestId]ResponseHandler{}
